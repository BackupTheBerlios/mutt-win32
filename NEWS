		   Visible changes since Mutt 1.2
		   ==============================


Folder formats and folder access
--------------------------------

- Better mh support: Mutt now supports .mh_sequences files.
  Currently, the "unseen", "flagged", and "replied" sequences are
  used to store mutt flags (the names are configurable using the
  $mh_seq_unseen, $mh_seq_flagged, and $mh_seq_replied configuration
  variables). As a side effect, messages in MH folders are no longer
  rewritten upon status changes.

- The "trashed" flag is supported for maildir folders.  See
  $maildir_trash.

- POP folder support.  You can now access a POP mailbox just like an
  IMAP folder (with obvious restrictions due to the protocol).

- URL syntax for remote folders.  You can pass things like
  pop://account@host and imap://account@host/folder as arguments for
  the -f command line flag.

- STARTTLS support.  If $ssl_starttls is set (the default), mutt
  will attempt to use STARTTLS on servers advertising that
  capability.

- $preconnect.  If set, a shell command to be executed if mutt fails
  to establish a connection to the server.  This is useful for
  setting up secure connections; see the muttrc(5) for details.

- $tunnel.  Use a pipe to a command instead of a raw socket.  See
  muttrc(5) for details.  (Basically, it's another way for setting
  up secure connections.)

- More new IMAP/POP-related variables (see muttrc(5) for details):
  $connect_timeout, $imap_authenticators, $imap_delim_chars,
  $imap_peek, $pop_authenticators, $pop_auth_try_all,
  $pop_checkinterval, $pop_delete, $pop_reconnect, $use_ipv6.

- The following IMAP/POP-related variables are gone:
  $imap_checkinterval, $imap_cramkey, $pop_port.

- There's a new imap-fetch-mail function, which forces a check for
  new messages on an IMAP server.

- The new-mailbox function was renamed to create-mailbox, and is
  bound to C instead of n by default.

Character set support
---------------------

- Mutt now uses the iconv interface for character set conversions.
  This means that you need either a very modern libc, or Bruno
  Haible's libiconv, which is available from
  <http://www.gnu.org/software/libiconv/>.

- With sufficiently recent versions of ncurses and slang, mutt works
  properly in utf-8 locales.

- On sufficiently modern systems, the $charset variable's value is
  automatically derived from the locale you use.  (Note, however,
  that manually setting it to a value which is compatible with your
  locale doesn't do any harm.)

- $send_charset is a colon-separated list of character sets now,
  defaulting to us-ascii:iso-8859-1:utf-8.

- charset-hook defines aliases for character sets encountered in
  messages (say, someone tags his messages with latin15 when he
  means iso-8859-15), iconv-hook defines local names for character
  sets (for systems which don't know about MIME names; see
  contrib/iconv for sample configuration snippets).

- The change-charset function is gone.  Use edit-type (C-e on the
  compose menu) instead.

- The recode-attachment function is gone.

Other changes
-------------

- There's a new variable $compose_format for the compose screen's
  status line.  You can now include the message's approximate
  on-the-wire size.

- The attachment menu knows about collapsing now: Using
  collapse-parts (bound to "v" by default), you can collapse and
  uncollapse parts of the attachment tree.  This function is also
  available from the pager when invoked from the attachment tree.

  Normally, the recvattach menu will start uncollapsed.  However,
  with the new $digest_collapse option (which is set by default),
  the individual messages contained in digests will be displayed
  collapsed.  (That is, there's one line per message.)

- Using $display_filter, you can specify a command which filters
  messages before they are displayed.

- Using message-hook, you can execute mutt configuration commands
  before a message is displayed (or formatted before replying).

- If you don't want that mutt moves flagged messages to your mbox,
  set $keep_flagged.

- Setting the $pgp_ignore_subkeys variable will cause mutt to ignore
  OpenPGP.  This option is set by default, and it's suggested that
  you leave it.

- $pgp_sign_micalg has gone.  Mutt now automatically determines what
  MIC algorithm was used for a particular signature.

- If $pgp_good_sign is set, then a PGP signature is only considered
  verified if the output from $pgp_verify_command matches this
  regular expression.  It's suggested that you set this variable to
  the typical text message output by PGP (or GPG, or whatever)
  produces when it encounters a good signature.  

- There's a new function, check-traditional-pgp, which is bound to
  esc-P by default.  It'll check whether a text parts of a message
  contain PGP encrypted or signed material, and possibly adjust
  content types.

- $print_split.  If this option is set, $print_command run
  separately for each message you print.  Useful with enscript(1)'s
  mail printing mode.

- $sig_on_top.  Include the signature before any quoted or forwarded
  text.  WARNING: use of this option may provoke flames.

- $text_flowed.  When set, mutt will generate text/plain attachments
  with the format=flowed parameter.  In order to properly produce
  such messages, you'll need an appropriate editor mode.  Note that
  the $indent_string option is ignored with flowed text.

- $to_chars has grown:  Mailing list messages are now tagged with an
  L in the index. If you want the old behaviour back, add this to
  your .muttrc: set to_chars=" +TCF "

- New emacs-like functions in the line editor: backward-word (M-b),
  capitalize-word (M-c), downcase-word (M-l), upcase-word (M-u),
  forward-word (M-f), kill-eow (M-d), tranpose-chars (unbound).

  transpose-chars is unbound by default because external query
  occupies C-t.  Suggested alternative binding:

	bind	editor	"\e\t"		complete-query
	bind	editor	"\Ct"		transpose-chars

- mailto URL support:  You can pass a mailto URL to mutt on the
  command line.

- If $duplicate_threads is set, mutt's new threading code will
  thread messages with the same message-id together.  Duplication
  will be indicated with an equals sign in the thread diagram.

  You can also limit your view to the duplicates (or exclude
  duplicates from view) by using the "~=" pattern.
